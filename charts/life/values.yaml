# Default values for simbruna.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

api:
  replicaCount: 1
  image:
    repository: "registry.home.ryougi.ca/simbru-api"
    pullPolicy: Always
    tag: ""
  env: 
    POSTGRES_CONNECTION_STRING: ""
    OAUTH_CLIENT_ID: ""
    OAUTH_CLIENT_SECRET: ""
    OAUTH_REDIRECT_URL: ""

  service:
    type: ClusterIP
    port: 8000
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: simbru-api.home.ryougi.ca
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: simbru-api.ryougi.ca
        paths:
          - path: /
            pathType: ImplementationSpecific

# Values that can be provided by SOPS secrets
oauth_client_id: ""
oauth_client_secret: ""
oauth_redirect_url: "https://simbru.ryougi.ca/auth/callback"
postgres_connection_string: ""
postgres_app_password: ""

frontend:
  replicaCount: 1
  image:
    repository: "registry.home.ryougi.ca/simbru-pwa"
    pullPolicy: Always
    tag: ""
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: simbru.home.ryougi.ca
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: simbru.ryougi.ca
        paths:
          - path: /
            pathType: ImplementationSpecific

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: 
    "nginx.ingress.kubernetes.io/rewrite-target": "/"
    "nginx.ingress.kubernetes.io/force-ssl-redirect": "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http



autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
